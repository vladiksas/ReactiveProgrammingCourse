type: edu
custom_name: Task 2
files:
- name: src/Task.java
  visible: true
  placeholders:
  - offset: 134
    length: 33
    placeholder_text: Flux.error(new ToDoException());
    initial_state:
      length: 32
      offset: 134
    initialized_from_dependency: false
    selected: false
    status: Solved
    encrypted_possible_answer: flux.filter(s -> s.length() > 3);
  text: "import reactor.core.publisher.Flux;\n\npublic class Task {\n\n\tpublic static\
    \ Flux<String> transformSequence(Flux<String> flux) {\n\t\treturn Flux.error(new\
    \ ToDoException());\n\t}\n}"
  learner_created: false
- name: test/CommonOperatorsTask2Tests.java
  visible: false
  text: "import java.time.Duration;\n\nimport org.junit.jupiter.api.Test;\nimport\
    \ reactor.core.publisher.Flux;\nimport reactor.test.StepVerifier;\n\npublic class\
    \ CommonOperatorsTask2Tests {\n\n\t@Test\n\tpublic void testSolution() {\n\t\t\
    Flux<String> sequence =\n\t\t\t\tTask.transformSequence(Flux.just(\"1\", \"10\"\
    , \"100\", \"1000\", \"10000\"));\n\n\t\tStepVerifier.create(sequence)\n\t\t \
    \           .expectNext(\"1000\", \"10000\")\n\t\t            .expectComplete()\n\
    \t\t            .verify(Duration.ofMillis(100));\n\t}\n}"
  learner_created: false
- name: build.gradle
  visible: false
  text: |-
    dependencies {
      implementation 'io.projectreactor:reactor-core'
    }
  learner_created: false
- name: task.ru.md
  visible: false
  text: "Отфильтруйте даный `Flux<String>` по условию длина слова больше 3ех \n  \
    \ \n<div class=\"hint\">\n  Используйте оператор <code>Flux#filter</code>\n</div>"
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Fri, 18 Nov 2022 18:49:32 UTC"
record: -1
